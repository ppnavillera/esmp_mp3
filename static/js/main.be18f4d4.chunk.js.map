{"version":3,"sources":["Mp3Player.js","App.js","reportWebVitals.js","index.js"],"names":["Mp3Player","mp3Links","setMp3Links","useState","currentUrl","setCurrentUrl","playing","setPlaying","useEffect","fetchMp3Links","supabase","createClient","process","async","data","error","functions","invoke","body","console","log","songs","results","map","page","properties","Link","url","name","Song","title","text","content","err","React","createElement","onChange","e","handleUrlChange","target","value","link","index","key","controls","src","autoPlay","onClick","handlePlay","handlePause","App","className","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"uPAuFeA,MAlFGA,KAChB,MAAOC,EAAUC,GAAeC,mBAAS,KAClCC,EAAYC,GAAiBF,mBAAS,KACtCG,EAASC,GAAcJ,oBAAS,GAEvCK,oBAAU,KACRC,KACC,IAEH,MAGMC,EAAWC,YAHIC,4CACAA,gDAIfH,EAAgBI,UACpB,IACE,MAAM,KAAEC,EAAI,MAAEC,SAAgBL,EAASM,UAAUC,OAAO,OAAQ,CAC9DC,KAAM,KAGR,GAAIH,EACFI,QAAQJ,MAAM,2BAA4BA,OACrC,CACLI,QAAQC,IAAI,0BAA2BN,GAEvC,MAAMO,EAAQP,EAAKQ,QAAQC,IAAKC,IAC9BL,QAAQC,IAAII,EAAKC,WAAWC,KAAKC,KAC1B,CACLC,KAAMJ,EAAKC,WAAWI,KAAKC,MAAM,GAAGC,KAAKC,QACzCL,IAAKH,EAAKC,WAAWC,KAAKC,OAG9BzB,EAAYmB,IAEd,MAAOY,GACPd,QAAQJ,MAAM,oBAAqBkB,KAiBvC,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,gCAEFD,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAQC,SAAWC,IAAMC,OAVRX,EAUwBU,EAAEE,OAAOC,MATxDnC,EAAcsB,QACdpB,GAAW,GAFYoB,QAWfO,IAAAC,cAAA,UAAQK,MAAM,IAAG,yDAChBvC,EAASsB,IAAI,CAACkB,EAAMC,IACnBR,IAAAC,cAAA,UAAQQ,IAAKD,EAAOF,MAAOC,EAAKd,KAC7Bc,EAAKb,QAIXxB,GACC8B,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOS,UAAQ,EAACC,IAAKzC,EAAY0C,SAAUxC,GAAS,oDAGpD4B,IAAAC,cAAA,UAAQY,QA/BDC,KACjBzC,GAAW,KA8B4B,gBAC7B2B,IAAAC,cAAA,UAAQY,QA5BAE,KAClB1C,GAAW,KA2B6B,gC,MC/D7B2C,MARf,WACE,OACEhB,IAAAC,cAAA,OAAKgB,UAAU,OACbjB,IAAAC,cAACnC,EAAS,QCIDoD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhC,IAAAC,cAACD,IAAMiC,WAAU,KACfjC,IAAAC,cAACe,EAAG,QAORE,M","file":"static/js/main.be18f4d4.chunk.js","sourcesContent":["// src/Mp3Player.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { createClient } from \"@supabase/supabase-js\";\n\nconst Mp3Player = () => {\n  const [mp3Links, setMp3Links] = useState([]);\n  const [currentUrl, setCurrentUrl] = useState(\"\");\n  const [playing, setPlaying] = useState(false);\n\n  useEffect(() => {\n    fetchMp3Links();\n  }, []);\n\n  const SUPABASE_URL = process.env.REACT_APP_SUPABASE_URL;\n  const SUPABASE_KEY = process.env.REACT_APP_SUPABASE_KEY;\n\n  const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\n\n  const fetchMp3Links = async () => {\n    try {\n      const { data, error } = await supabase.functions.invoke(\"esmp\", {\n        body: {},\n      });\n\n      if (error) {\n        console.error(\"Error invoking function:\", error);\n      } else {\n        console.log(\"Function response data:\", data);\n        // 여기서 data를 원하는 대로 처리할 수 있습니다.\n        const songs = data.results.map((page) => {\n          console.log(page.properties.Link.url);\n          return {\n            name: page.properties.Song.title[0].text.content,\n            url: page.properties.Link.url,\n          };\n        });\n        setMp3Links(songs);\n      }\n    } catch (err) {\n      console.error(\"Unexpected error:\", err);\n    }\n  };\n\n  const handlePlay = () => {\n    setPlaying(true);\n  };\n\n  const handlePause = () => {\n    setPlaying(false);\n  };\n\n  const handleUrlChange = (url) => {\n    setCurrentUrl(url);\n    setPlaying(false);\n  };\n\n  return (\n    <div>\n      <h1>MP3 플레이어</h1>\n      {true ? (\n        <div>\n          <select onChange={(e) => handleUrlChange(e.target.value)}>\n            <option value=\"\">MP3 파일을 선택하세요</option>\n            {mp3Links.map((link, index) => (\n              <option key={index} value={link.url}>\n                {link.name}\n              </option>\n            ))}\n          </select>\n          {currentUrl && (\n            <div>\n              <audio controls src={currentUrl} autoPlay={playing}>\n                Your browser does not support the audio element.\n              </audio>\n              <button onClick={handlePlay}>재생</button>\n              <button onClick={handlePause}>일시정지</button>\n            </div>\n          )}\n        </div>\n      ) : (\n        <p>노션에서 데이터를 불러오는 중...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Mp3Player;\n","// src/App.js\nimport React from \"react\";\nimport Mp3Player from \"./Mp3Player\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Mp3Player />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}